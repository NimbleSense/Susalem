// <auto-generated />
using System;
using Susalem.Persistence.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Susalem.Persistence.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241123125833_addAlerter")]
    partial class addAlerter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AlarmEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlarmDetails")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ConfirmTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmUser")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PositionName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReportTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Alarms", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AlarmRuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlarmLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notification")
                        .HasColumnType("TEXT");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rules")
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("AlarmRule", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.ApplicationConfigurationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configurations", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AreaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Areas", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.DeviceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Device", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.DeviceTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DeviceType", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.PositionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoundedAlerter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Functions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShowDoor")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("Susalem.Persistence.Models.Application.ChannelDevicesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("ChannelDevices", (string)null);
                });

            modelBuilder.Entity("Susalem.Persistence.Models.Application.ChannelEnitity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Channel", (string)null);
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AlarmEntity", b =>
                {
                    b.HasOne("Susalem.Infrastructure.Models.Application.PositionEntity", "Position")
                        .WithMany("Alarms")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AlarmRuleEntity", b =>
                {
                    b.HasOne("Susalem.Infrastructure.Models.Application.PositionEntity", "Position")
                        .WithMany("Rules")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.DeviceEntity", b =>
                {
                    b.HasOne("Susalem.Infrastructure.Models.Application.DeviceTypeEntity", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.PositionEntity", b =>
                {
                    b.HasOne("Susalem.Infrastructure.Models.Application.AreaEntity", "Area")
                        .WithMany("Positions")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Susalem.Persistence.Models.Application.ChannelDevicesEntity", b =>
                {
                    b.HasOne("Susalem.Persistence.Models.Application.ChannelEnitity", "Channel")
                        .WithMany("ChannelDevices")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Susalem.Infrastructure.Models.Application.DeviceEntity", "Device")
                        .WithOne("ChannelDevices")
                        .HasForeignKey("Susalem.Persistence.Models.Application.ChannelDevicesEntity", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.AreaEntity", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.DeviceEntity", b =>
                {
                    b.Navigation("ChannelDevices");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.DeviceTypeEntity", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Susalem.Infrastructure.Models.Application.PositionEntity", b =>
                {
                    b.Navigation("Alarms");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("Susalem.Persistence.Models.Application.ChannelEnitity", b =>
                {
                    b.Navigation("ChannelDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
